model chat_room {
  id                       Int       @id @default(autoincrement())
  name                     String    @default("")
  avatar                   String    @default("")
  type                     String
  last_message_content     String    @default("")
  last_message_time        DateTime?
  last_message_sender_id   Int?
  last_message_sender_name String    @default("")

  messages     chat_message[]
  participants chat_room_participant[]
  admins       chat_room_admin[]

  created DateTime @default(now())
  updated DateTime @updatedAt
}

model chat_room_participant {
  id           Int @id @default(autoincrement())
  chat_room_id Int
  user_id      Int

  chat_room chat_room @relation(fields: [chat_room_id], references: [id])
  user      user      @relation(fields: [user_id], references: [id])

  created DateTime @default(now())
  updated DateTime @updatedAt

  @@unique([chat_room_id, user_id])
}

model chat_room_admin {
  id           Int @id @default(autoincrement())
  chat_room_id Int
  user_id      Int

  chat_room chat_room @relation(fields: [chat_room_id], references: [id])
  user      user      @relation(fields: [user_id], references: [id])

  created DateTime @default(now())
  updated DateTime @updatedAt

  @@unique([chat_room_id, user_id])
}

model chat_message {
  id            Int       @id @default(autoincrement())
  chatroom_name String
  content       String    @db.VarChar(1000)
  time          DateTime  @default(now())
  status        String    @default("pending")
  is_recalled   Boolean   @default(false)
  recalled_time DateTime?

  chat_room_id Int
  chat_room    chat_room @relation(fields: [chat_room_id], references: [id])
  sender_id    Int
  sender       user      @relation("user_send_chat_message", fields: [sender_id], references: [id])
  receiver_id  Int?
  receiver     user?     @relation("user_receive_chat_receive_message", fields: [receiver_id], references: [id])

  read_by   chat_message_read_by[]
  reactions chat_message_reaction[]
  userId    Int?

  created DateTime @default(now())
  updated DateTime @updatedAt
}

model chat_message_read_by {
  id              Int      @id @default(autoincrement())
  chat_message_id Int
  user_id         Int
  read_time       DateTime @default(now())

  chat_message chat_message @relation(fields: [chat_message_id], references: [id])
  user         user         @relation(fields: [user_id], references: [id])

  created DateTime @default(now())
  updated DateTime @updatedAt

  @@unique([chat_message_id, user_id])
}

model chat_message_reaction {
  id              Int    @id @default(autoincrement())
  chat_message_id Int
  user_id         Int
  reaction        String

  chat_message chat_message @relation(fields: [chat_message_id], references: [id])
  user         user         @relation(fields: [user_id], references: [id])

  created DateTime @default(now())
  updated DateTime @updatedAt

  @@unique([chat_message_id, user_id, reaction])
}
